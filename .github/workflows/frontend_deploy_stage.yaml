name: Create and publish a frontend Docker image
concurrency:
  group: stage_deploy
  cancel-in-progress: true

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: lubimovka_frontend-1
  DEPLOY_PATH: /LUBIMOVKA

jobs:
  build-and-push-image-to-github-packages:
    name: Push Docker image to GitHub Packages
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
        with:
          ref: main
      -
        name: Docker login
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          labels: runnumber=${GITHUB_RUN_ID}
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ github.actor }}/${{ env.IMAGE_NAME }}:stage,
            ${{ env.REGISTRY }}/${{ github.actor }}/${{ env.IMAGE_NAME }}:main,
            ${{ env.REGISTRY }}/${{ github.actor }}/${{ env.IMAGE_NAME }}:latest,
            ${{ env.REGISTRY }}/${{ github.actor }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
      -
        name: Send message if Build and push Docker failed
        if: ${{ failure() }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            Ошибка при сборке образа

            ${{ steps.build-image.outputs.labels }} - ${{ steps.build-image.outcome }}
  
  deploy:
    name: Deploy changes on server
    runs-on: ubuntu-latest
    environment:
      name: stage_deploy
    needs: build-and-push-image-to-github-packages
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
        with:
          ref: main
      -
        name: Create SSH key 
        # (SSH_KNOWN_HOSTS=ssh-keyscan -H сервер, SSH_PRIVATE_KEY - ключ с ПК, которому разрешен вход)
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo "${{ secrets.SSH_KNOWN_HOSTS }}" > ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
      -
        name: Create folder for application
        run: ssh ${{ secrets.USERNAME }}@${{ secrets.HOST }} mkdir -p ${{ env.DEPLOY_PATH }}
      -
        name: Deploy with scp
        run: scp -r infra_deploy/stage/ ${{ secrets.USERNAME }}@${{ secrets.HOST }}:${{ env.DEPLOY_PATH }}
      -
        name: Executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            cd ${{ env.DEPLOY_PATH }}/stage/

            # Используем переменные окружения, сохраненные от CI/CD backend
            # Создание сети вынесено отдельно для возможности независимо перезапускать контейнеры (через external networks)
            # docker network create stage_db_network || true
            docker network create stage_swag_network || true

            # Установка приложения - frontend
            cp -rf ${{ env.DEPLOY_PATH }}/stage/lubimovka-frontend.service /etc/systemd/system/lubimovka-frontend.service
            systemctl daemon-reload
            systemctl restart lubimovka-frontend.service

            # После установки удаляем файлы
            rm ${{ env.DEPLOY_PATH }}/stage/lubimovka-frontend.service

  send_message:
    name: Send message
    runs-on: ubuntu-latest
    environment:
      name: stage_deploy
    needs: deploy
    steps:
      -
        name: Send message after updating the image on the server
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: Код на сервере разработки обновлён!
